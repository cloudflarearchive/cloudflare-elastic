{
   "index_patterns": [
      "cloudflare-*"
   ],
   "mappings": {
      "runtime": {
         "Threats": {
            "type": "keyword",
            "script": {
               "source": "if (doc['cloudflare.edge.pathing.src'].size() != 0 && doc['cloudflare.edge.pathing.op'].size() != 0 && doc['cloudflare.edge.pathing.status'].size() != 0) {\n  if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"user\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"ban\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"ip\"))\n  { \n      return emit(\"ip block\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"user\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"ban\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"ctry\"))\n  {\n      return emit(\"country block\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"user\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"ban\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"zl\"))\n  {\n      return emit(\"routed by zone lockdown\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"user\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"ban\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"ua\"))\n  {\n      return emit(\"blocked user agent\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"user\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"ban\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"rateLimit\"))\n  {\n      return emit(\"blocked by rate-limiting rule\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"filterBasedFirewall\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"ban\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"unknown\"))\n  {\n      return emit(\"blocked by filter based firewall\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"filterBasedFirewall\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"chl\"))\n  {\n      return emit(\"challenged by filter based firewall\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"bic\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"ban\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"unknown\"))\n  {\n      return emit(\"browser integrity check\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"hot\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"ban\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"unknown\"))\n  {\n      return emit(\"blocked hotlink\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"macro\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"chl\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"captchaFaill\"))\n  {\n      return emit(\"CAPTCHA challenge failed\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"macro\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"chl\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"jschlFail\"))\n  {\n      return emit(\"java script challenge failed\");\n  }\n}\nif (doc['cloudflare.edge.pathing.status'].size() != 0) {\n   return emit(doc['cloudflare.edge.pathing.status'].value);\n}\nemit(\"\");\n"
            }
         },
         "Threats vs Requests": {
            "type": "keyword",
            "script": {
               "source": "if (doc['cloudflare.edge.pathing.src'].size() != 0 && doc['cloudflare.edge.pathing.op'].size() != 0 && doc['cloudflare.edge.pathing.status'].size() != 0) {\n  if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"user\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"ban\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"ip\"))\n  { \n      return emit(\"Threats\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"user\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"ban\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"ctry\"))\n  {\n      return emit(\"Threats\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"user\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"ban\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"zl\"))\n  {\n      return emit(\"Threats\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"user\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"ban\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"ua\"))\n  {\n      return emit(\"Threats\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"user\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"ban\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"rateLimit\"))\n  {\n      return emit(\"Threats\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"filterBasedFirewall\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"ban\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"unknown\"))\n  {\n      return emit(\"Threats\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"filterBasedFirewall\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"chl\"))\n  {\n      return emit(\"Threats\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"bic\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"ban\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"unknown\"))\n  {\n      return emit(\"Threats\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"hot\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"ban\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"unknown\"))\n  {\n      return emit(\"Threats\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"macro\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"chl\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"captchaFaill\"))\n  {\n      return emit(\"Threats\");\n  }\n  else if (doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"macro\")\n  && \n  doc['cloudflare.edge.pathing.op'].value.equalsIgnoreCase(\"chl\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"jschlFail\"))\n  {\n      return emit(\"Threats\");\n  }\n}\nemit(\"Requests\");\n"
            }
         },
         "Bots": {
            "type": "keyword",
            "script": {
               "source": "if (doc['cloudflare.edge.pathing.src'].size() != 0 && doc['cloudflare.edge.pathing.status'].size() != 0) {\n  if(doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"filterBasedFirewall\") && doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"captchaNew\")) { \n    return emit(\"Bots\");\n  }\n}\nemit(\"Requests\");\n"
            }
         },
         "Bad Bots": {
            "type": "long",
            "script": {
               "source": "int firstCount = 0;\nint secondCount = 0;\n\nif(doc['cloudflare.edge.pathing.src'].size() != 0 && doc['cloudflare.edge.pathing.status'].size() != 0) {\n  if (\n  doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"filterBasedFirewall\")\n  && \n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"captchaNew\")\n  ) \n  { firstCount = 1  }\n  \n  if (\n  doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"filterBasedFirewall\")\n  &&\n  doc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"captchaSucc\")\n  )\n  { secondCount = 1 }\n}\nemit(firstCount - secondCount);\n"
            }
         },
         "EdgeResponseStatusClass": {
            "type": "keyword",
            "script": {
               "source": "if (doc['cloudflare.edge.response.status'].size() != 0) {\n  if (doc['cloudflare.edge.response.status'].value > 199 && doc['cloudflare.edge.response.status'].value < 300)   { \n      return emit(\"2xx\");\n  }\n  if (doc['cloudflare.edge.response.status'].value > 299 && doc['cloudflare.edge.response.status'].value < 400)   { \n      return emit(\"3xx\");\n  }\n  if (doc['cloudflare.edge.response.status'].value > 399 && doc['cloudflare.edge.response.status'].value < 500)   { \n      return emit(\"4xx\");\n  }\n  if (doc['cloudflare.edge.response.status'].value > 499 && doc['cloudflare.edge.response.status'].value < 600)   { \n      return emit(\"5xx\");\n  }\n}\nemit(\"\");\n"
            }
         },
         "CAPTCHAs Solved": {
            "type": "keyword",
            "script": {
               "source": "if (doc['cloudflare.edge.pathing.src'].size() != 0 && doc['cloudflare.edge.pathing.status'].size() != 0 && doc['cloudflare.edge.pathing.src'].value.equalsIgnoreCase(\"filterBasedFirewall\") && \ndoc['cloudflare.edge.pathing.status'].value.equalsIgnoreCase(\"captchaSucc\")) { \n  emit(\"False Detected Bots\");\n}\nelse {\n   emit(\"Requests\");\n}"
            }
         },
         "OriginResponseStatusClass": {
            "type": "keyword",
            "script": {
               "source": "if (doc['cloudflare.http.response.status_code'].size() != 0) {\n  if (doc['cloudflare.http.response.status_code'].value > 199 && doc['cloudflare.http.response.status_code'].value < 300)   { \n    return emit(\"2xx\");\n  }\n  if (doc['cloudflare.http.response.status_code'].value > 299 && doc['cloudflare.http.response.status_code'].value < 400)   { \n      return emit(\"3xx\");\n  }\n  if (doc['cloudflare.http.response.status_code'].value > 399 && doc['cloudflare.http.response.status_code'].value < 500)   { \n      return emit(\"4xx\");\n  }\n  if (doc['cloudflare.http.response.status_code'].value > 499 && doc['cloudflare.http.response.status_code'].value < 600)   { \n      return emit(\"5xx\");\n  }\n  if (doc['cloudflare.http.response.status_code'].value == 0)   { \n      return emit(\"0 - Served from CF Edge\");\n  }\n}\nreturn emit(\"\");\n"
            }
         },
         "CacheHitRateBandwidthPercentNotIn": {
            "type": "long",
            "script": {
               "source": "if (\n  doc['cloudflare.cache.status'].size() != 0 && (\n    (!doc['cloudflare.cache.status'].value.equalsIgnoreCase(\"bypass\"))\n    ||\n    (!doc['cloudflare.cache.status'].value.equalsIgnoreCase(\"unknown\"))\n  )\n) { \n  emit(1);\n}\nelse {\n  emit(0);\n}"
            }
         },
         "CacheHitRateBandwidthPercentIn": {
            "type": "long",
            "script": {
               "source": "if (doc['cloudflare.cache.status'].size() != 0 && (\ndoc['cloudflare.cache.status'].value.equalsIgnoreCase(\"hit\")\n||\ndoc['cloudflare.cache.status'].value.equalsIgnoreCase(\"stale\")\n||\ndoc['cloudflare.cache.status'].value.equalsIgnoreCase(\"updating\")\n||\ndoc['cloudflare.cache.status'].value.equalsIgnoreCase(\"ignored\")\n||\ndoc['cloudflare.cache.status'].value.equalsIgnoreCase(\"revalidated\")))\n{ \n  emit(1);\n}\nelse {\n  emit(0);\n}"
            }
         }
      },
      "properties": {
         "observer.vendor": {
            "type": "keyword"
         },
         "observer.type": {
            "type": "keyword"
         },
         "ecs.version": {
            "type": "keyword"
         },
         "event.dataset": {
            "type": "keyword"
         },
         "cloudflare.waf.flags": {
            "type": "keyword"
         },
         "cloudflare.firewall.matches.actions" : {
            "type": "keyword"
         },
         "cloudflare.firewall.matches.rule_ids" : {
            "type": "keyword"
         },
         "cloudflare.firewall.matches.sources" : {
            "type": "keyword"
         },
         "cloudflare.edge.colo.code" : {
            "type": "keyword"
         },
         "cloudflare.client.ssl.protocol": {
            "type": "keyword"
         },
         "cloudflare.client.request.protocol" : {
            "type": "keyword"
         },
         "cloudflare.waf.rule.id": {
            "type": "keyword"
         },
         "cloudflare.edge.colo.id": {
            "type": "integer"
         },
         "source.geo": {
            "properties": {
               "ip": {
                  "type": "ip"
               },
               "postal_code": {
                  "type": "keyword"
               },
               "location": {
                  "type": "geo_point"
               },
               "dma_code": {
                  "type": "long"
               },
               "country_code3": {
                  "type": "keyword"
               },
               "latitude": {
                  "type": "float"
               },
               "longitude": {
                  "type": "float"
               },
               "region_name": {
                  "type": "keyword"
               },
               "city_name": {
                  "type": "keyword"
               },
               "timezone": {
                  "type": "keyword"
               },
               "country_code2": {
                  "type": "keyword"
               },
               "continent_code": {
                  "type": "keyword"
               },
               "country_name": {
                  "type": "keyword"
               },
               "region_code": {
                  "type": "keyword"
               },
               "continent_name": {
                  "type": "keyword"
               },
               "region_iso_code": {
                  "type": "keyword"
               }
            }
         },
         "cloudflare.origin.response.time": {
            "type": "long"
         },
         "cloudflare.origin.ip": {
            "type": "ip"
         },
         "@version": {
            "type": "keyword"
         },
         "cloudflare.cache.status": {
            "type": "keyword"
         },
         "source.geo.country_iso_code": {
            "type": "keyword"
         },
         "cloudflare.edge.server.ip": {
            "type": "ip"
         },
         "observer.ip": {
            "type": "ip"
         },
         "cloudflare.waf.matched_var": {
            "type": "keyword"
         },
         "cloudflare.waf.action": {
            "type": "keyword"
         },
         "cloudflare.edge.pathing.status": {
            "type": "keyword"
         },
         "source.as.number": {
            "type": "long"
         },
         "cloudflare.edge.rate.limit.id": {
            "type": "long"
         },
         "user_agent.original": {
            "type": "keyword"
         },
         "user_agent.device.name": {
            "type": "keyword"
         },
         "user_agent.name": {
            "type": "keyword"
         },
         "user_agent.os.full": {
            "type": "keyword"
         },
         "user_agent.os.kernel": {
            "type": "keyword"
         },
         "user_agent.os.platform": {
            "type": "keyword"
         },
         "user_agent.os.name": {
            "type": "keyword"
         },
         "user_agent.os.version": {
            "type": "keyword"
         },
         "user_agent.version": {
            "type": "keyword"
         },
         "user_agent.major": {
            "type": "keyword"
         },
         "user_agent.minor": {
            "type": "keyword"
         },
         "user_agent.patch": {
            "type": "keyword"
         },
         "user_agent.build": {
            "type": "keyword"
         },
         "user_agent.os_name": {
            "type": "keyword"
         },
         "user_agent.os_major": {
            "type": "keyword"
         },
         "user_agent.os_minor": {
            "type": "keyword"
         },
         "cloudflare.edge.response.compression_ratio": {
            "type": "float"
         },
         "cloudflare.parent.ray_id": {
            "type": "keyword"
         },
         "http.request.referrer": {
            "type": "keyword"
         },
         "cloudflare.cache.tiered.fill": {
            "type": "boolean"
         },
         "cloudflare.ray_id": {
            "type": "keyword"
         },
         "cloudflare.client.ip.class": {
            "type": "keyword"
         },
         "http.version": {
            "type": "keyword"
         },
         "cloudflare.edge.request.host": {
            "type": "keyword"
         },
         "cloudflare.cache.response.bytes": {
            "type": "long"
         },
         "http.response.bytes": {
            "type": "long"
         },
         "cloudflare.device.type": {
            "type": "keyword"
         },
         "cloudflare.edge.rate.limit.action": {
            "type": "keyword"
         },
         "cloudflare.edge.end.timestamp": {
            "type": "date"
         },
         "event.end": {
            "type": "date"
         },
         "cloudflare.origin.response.http.expires": {
            "type": "date",
            "format": "E, d MMM uuuu HH:mm:ss 'UTC'"
         },
         "cloudflare.edge.response.status": {
            "type": "long"
         },
         "http.request.bytes": {
            "type": "long"
         },
         "cloudflare.cache.response.status": {
            "type": "long"
         },
         "http.response.status_code": {
            "type": "long"
         },
         "url.domain": {
            "type": "keyword"
         },
         "cloudflare.origin.ssl.protocol": {
            "type": "keyword"
         },
         "url.full": {
            "type": "keyword"
         },
         "cloudflare.origin.response.bytes": {
            "type": "long"
         },
         "cloudflare.worker.cpu_time": {
            "type": "long"
         },
         "cloudflare.origin.response.http.last_modified": {
            "type": "date",
            "ignore_malformed": true
         },
         "cloudflare.edge.start.timestamp": {
            "type": "date"
         },
         "event.start": {
            "type": "date"
         },
         "cloudflare.edge.pathing.src": {
            "type": "keyword"
         },
         "cloudflare.waf.profile": {
            "type": "keyword"
         },
         "cloudflare.edge.pathing.op": {
            "type": "keyword"
         },
         "cloudflare.security_level": {
            "type": "keyword"
         },
         "cloudflare.waf.rule.message": {
            "type": "keyword"
         },
         "cloudflare.http.response.status_code": {
            "type": "long"
         },
         "@timestamp": {
            "type": "date"
         },
         "server.ip": {
            "type": "ip"
         },
         "destination.ip": {
            "type": "ip"
         },
         "http.request.method": {
            "type": "keyword"
         },
         "cloudflare.zone_id": {
            "type": "integer"
         },
         "source.port": {
            "type": "long"
         },
         "source.address" : {
            "type" : "keyword"
         },
         "source.ip" : {
            "type" : "ip"
         },
         "client.port": {
            "type": "long"
         },
         "client.ip" : {
            "type" : "ip"
         },
         "client.address": {
            "type" : "keyword"
         },
         "cloudflare.worker.subrequest": {
            "type": "boolean"
         },
         "cloudflare.worker.subrequest_count": {
            "type": "long"
         },
         "cloudflare.worker.status": {
            "type": "keyword"
         },
         "cloudflare.edge.response.content_type": {
            "type": "keyword"
         },
         "cloudflare.client.ssl.cipher": {
            "type": "keyword"
         },
         "cloudflare.edge.response.bytes": {
            "type": "long"
         },
         "url.path": {
            "type": "keyword"
         }
      }
   },
   "settings": {
      "index": {
         "number_of_shards": "1",
         "number_of_replicas": "1",
         "mapping.ignore_malformed": true
      }
   }
}
